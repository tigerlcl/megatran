[
  {
    "file_path": "/home/yangchenyu/megatran/data/DTT-test/DXF/AsciiToUnicode.json",
    "input": "C",
    "output": "67",
    "ground_truth": "67",
    "is_correct": "True",
    "instruction": "Transform each ASCII character into its corresponding Unicode decimal value.\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: #\nOutput: 35\nInput: (\nOutput: 40\nInput: 3\nOutput: 51"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/DTT-test/DXF/AsciiToUnicode.json",
    "input": "L",
    "output": "76",
    "ground_truth": "76",
    "is_correct": "True",
    "instruction": "Transform each ASCII character into its corresponding Unicode decimal value.\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: #\nOutput: 35\nInput: (\nOutput: 40\nInput: 3\nOutput: 51"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/DTT-test/DXF/AsciiToUnicode.json",
    "input": "2",
    "output": "50",
    "ground_truth": "50",
    "is_correct": "True",
    "instruction": "Transform each ASCII character into its corresponding Unicode decimal value.\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: #\nOutput: 35\nInput: (\nOutput: 40\nInput: 3\nOutput: 51"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/DTT-test/DXF/AsciiToUnicode.json",
    "input": "x",
    "output": "120",
    "ground_truth": "120",
    "is_correct": "True",
    "instruction": "Transform each ASCII character into its corresponding Unicode decimal value.\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: #\nOutput: 35\nInput: (\nOutput: 40\nInput: 3\nOutput: 51"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/DTT-test/DXF/AsciiToUnicode.json",
    "input": "{",
    "output": "123",
    "ground_truth": "123",
    "is_correct": "True",
    "instruction": "Transform each ASCII character into its corresponding Unicode decimal value.\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: #\nOutput: 35\nInput: (\nOutput: 40\nInput: 3\nOutput: 51"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/DTT-test/DXF/AsciiToUnicode.json",
    "input": "+",
    "output": "43",
    "ground_truth": "43",
    "is_correct": "True",
    "instruction": "Transform each ASCII character into its corresponding Unicode decimal value.\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: #\nOutput: 35\nInput: (\nOutput: 40\nInput: 3\nOutput: 51"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/DTT-test/DXF/CharToAscii.json",
    "input": "U+0044",
    "output": "068",
    "ground_truth": "068",
    "is_correct": "True",
    "instruction": "Convert each Unicode character to its corresponding ASCII code.\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: U+0041\nOutput: 065\nInput: U+0042\nOutput: 066\nInput: U+0043\nOutput: 067"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/DTT-test/DXF/CharToAscii.json",
    "input": "U+0054",
    "output": "084",
    "ground_truth": "084",
    "is_correct": "True",
    "instruction": "Convert each Unicode character to its corresponding ASCII code.\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: U+0041\nOutput: 065\nInput: U+0042\nOutput: 066\nInput: U+0043\nOutput: 067"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/DTT-test/DXF/CharToAscii.json",
    "input": "U+0055",
    "output": "085",
    "ground_truth": "085",
    "is_correct": "True",
    "instruction": "Convert each Unicode character to its corresponding ASCII code.\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: U+0041\nOutput: 065\nInput: U+0042\nOutput: 066\nInput: U+0043\nOutput: 067"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/DTT-test/DXF/CharToAscii.json",
    "input": "U+0056",
    "output": "086",
    "ground_truth": "086",
    "is_correct": "True",
    "instruction": "Convert each Unicode character to its corresponding ASCII code.\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: U+0041\nOutput: 065\nInput: U+0042\nOutput: 066\nInput: U+0043\nOutput: 067"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/DTT-test/DXF/CharToAscii.json",
    "input": "U+0057",
    "output": "087",
    "ground_truth": "087",
    "is_correct": "True",
    "instruction": "Convert each Unicode character to its corresponding ASCII code.\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: U+0041\nOutput: 065\nInput: U+0042\nOutput: 066\nInput: U+0043\nOutput: 067"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/DTT-test/DXF/CharToAscii.json",
    "input": "U+0058",
    "output": "088",
    "ground_truth": "088",
    "is_correct": "True",
    "instruction": "Convert each Unicode character to its corresponding ASCII code.\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: U+0041\nOutput: 065\nInput: U+0042\nOutput: 066\nInput: U+0043\nOutput: 067"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/DTT-test/DXF/CharToAscii.json",
    "input": "U+0059",
    "output": "089",
    "ground_truth": "089",
    "is_correct": "True",
    "instruction": "Convert each Unicode character to its corresponding ASCII code.\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: U+0041\nOutput: 065\nInput: U+0042\nOutput: 066\nInput: U+0043\nOutput: 067"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/DTT-test/DXF/CharToAscii.json",
    "input": "U+005A",
    "output": "090",
    "ground_truth": "090",
    "is_correct": "True",
    "instruction": "Convert each Unicode character to its corresponding ASCII code.\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: U+0041\nOutput: 065\nInput: U+0042\nOutput: 066\nInput: U+0043\nOutput: 067"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/DTT-test/DXF/HexCodeToRGB.json",
    "input": "#306860",
    "output": "(3161344)",
    "ground_truth": "(4810496)",
    "is_correct": "False",
    "instruction": "Convert a hex color code into its equivalent RGB integer representation by combining the decimal values of the red, green, and blue components.\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: #ffb6c1\nOutput: (255182193)\nInput: #333333\nOutput: (515151)\nInput: #d52b1e\nOutput: (2134330)"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/DTT-test/DXF/HexCodeToRGB.json",
    "input": "#045ca2",
    "output": "(457378)",
    "ground_truth": "(492162)",
    "is_correct": "False",
    "instruction": "Convert a hex color code into its equivalent RGB integer representation by combining the decimal values of the red, green, and blue components.\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: #ffb6c1\nOutput: (255182193)\nInput: #333333\nOutput: (515151)\nInput: #d52b1e\nOutput: (2134330)"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/DTT-test/DXF/HexCodeToRGB.json",
    "input": "#fed100",
    "output": "(2542090)",
    "ground_truth": "(2542090)",
    "is_correct": "True",
    "instruction": "Convert a hex color code into its equivalent RGB integer representation by combining the decimal values of the red, green, and blue components.\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: #ffb6c1\nOutput: (255182193)\nInput: #333333\nOutput: (515151)\nInput: #d52b1e\nOutput: (2134330)"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/DTT-test/DXF/HexCodeToRGB.json",
    "input": "#000000",
    "output": "(0)",
    "ground_truth": "(000)",
    "is_correct": "False",
    "instruction": "Convert a hex color code into its equivalent RGB integer representation by combining the decimal values of the red, green, and blue components.\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: #ffb6c1\nOutput: (255182193)\nInput: #333333\nOutput: (515151)\nInput: #d52b1e\nOutput: (2134330)"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/DTT-test/DXF/HexCodeToRGB.json",
    "input": "#999999",
    "output": "(10066329)",
    "ground_truth": "(153153153)",
    "is_correct": "False",
    "instruction": "Convert a hex color code into its equivalent RGB integer representation by combining the decimal values of the red, green, and blue components.\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: #ffb6c1\nOutput: (255182193)\nInput: #333333\nOutput: (515151)\nInput: #d52b1e\nOutput: (2134330)"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/DTT-test/DXF/HexCodeToRGB.json",
    "input": "#123456",
    "output": "(1193046)",
    "ground_truth": "(185286)",
    "is_correct": "False",
    "instruction": "Convert a hex color code into its equivalent RGB integer representation by combining the decimal values of the red, green, and blue components.\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: #ffb6c1\nOutput: (255182193)\nInput: #333333\nOutput: (515151)\nInput: #d52b1e\nOutput: (2134330)"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/DTT-test/DXF/HexCodeToRGB.json",
    "input": "#000fff",
    "output": "(4095)",
    "ground_truth": "(015255)",
    "is_correct": "False",
    "instruction": "Convert a hex color code into its equivalent RGB integer representation by combining the decimal values of the red, green, and blue components.\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: #ffb6c1\nOutput: (255182193)\nInput: #333333\nOutput: (515151)\nInput: #d52b1e\nOutput: (2134330)"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/DTT-test/DXF/PoundsToKg.json",
    "input": "8",
    "output": "3.62",
    "ground_truth": "3.6",
    "is_correct": "False",
    "instruction": "Convert weight from pounds to kilograms.\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 1\nOutput: 0.45\nInput: 70\nOutput: 31.75\nInput: 99\nOutput: 44.9"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/DTT-test/DXF/PoundsToKg.json",
    "input": "59",
    "output": "26.75",
    "ground_truth": "26.76",
    "is_correct": "False",
    "instruction": "Convert weight from pounds to kilograms.\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 1\nOutput: 0.45\nInput: 70\nOutput: 31.75\nInput: 99\nOutput: 44.9"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/DTT-test/DXF/PoundsToKg.json",
    "input": "68",
    "output": "30.84",
    "ground_truth": "30.84",
    "is_correct": "True",
    "instruction": "Convert weight from pounds to kilograms.\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 1\nOutput: 0.45\nInput: 70\nOutput: 31.75\nInput: 99\nOutput: 44.9"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/DTT-test/DXF/PoundsToKg.json",
    "input": "212",
    "output": "95.95",
    "ground_truth": "96.16",
    "is_correct": "False",
    "instruction": "Convert weight from pounds to kilograms.\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 1\nOutput: 0.45\nInput: 70\nOutput: 31.75\nInput: 99\nOutput: 44.9"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/DTT-test/DXF/PoundsToKg.json",
    "input": "192",
    "output": "86.9",
    "ground_truth": "87.09",
    "is_correct": "False",
    "instruction": "Convert weight from pounds to kilograms.\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 1\nOutput: 0.45\nInput: 70\nOutput: 31.75\nInput: 99\nOutput: 44.9"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/DTT-test/DXF/PoundsToKg.json",
    "input": "190",
    "output": "86.18",
    "ground_truth": "86.18",
    "is_correct": "True",
    "instruction": "Convert weight from pounds to kilograms.\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 1\nOutput: 0.45\nInput: 70\nOutput: 31.75\nInput: 99\nOutput: 44.9"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/DTT-test/DXF/RGBToColor.json",
    "input": "138;43;226",
    "output": "BlueViolet",
    "ground_truth": "BlueViolet",
    "is_correct": "True",
    "instruction": "Transform RGB color values into their corresponding named color representations, categorizing shades of grey from dark to light based on the intensity of the RGB values provided.\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 84;84;84\nOutput: Grey\nInput: 211;211;211\nOutput: LightGrey\nInput: 255;255;255\nOutput: White"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/DTT-test/DXF/RGBToColor.json",
    "input": "173;216;230",
    "output": "LightBlue",
    "ground_truth": "LightBlue",
    "is_correct": "True",
    "instruction": "Transform RGB color values into their corresponding named color representations, categorizing shades of grey from dark to light based on the intensity of the RGB values provided.\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 84;84;84\nOutput: Grey\nInput: 211;211;211\nOutput: LightGrey\nInput: 255;255;255\nOutput: White"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/DTT-test/DXF/RGBToColor.json",
    "input": "240;255;255",
    "output": "LightCyan",
    "ground_truth": "Azure",
    "is_correct": "False",
    "instruction": "Transform RGB color values into their corresponding named color representations, categorizing shades of grey from dark to light based on the intensity of the RGB values provided.\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 84;84;84\nOutput: Grey\nInput: 211;211;211\nOutput: LightGrey\nInput: 255;255;255\nOutput: White"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/DTT-test/DXF/RGBToColor.json",
    "input": "0;255;255",
    "output": "Cyan",
    "ground_truth": "Cyan",
    "is_correct": "True",
    "instruction": "Transform RGB color values into their corresponding named color representations, categorizing shades of grey from dark to light based on the intensity of the RGB values provided.\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 84;84;84\nOutput: Grey\nInput: 211;211;211\nOutput: LightGrey\nInput: 255;255;255\nOutput: White"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/DTT-test/DXF/RGBToColor.json",
    "input": "165;42;42",
    "output": "Brown",
    "ground_truth": "Brown",
    "is_correct": "True",
    "instruction": "Transform RGB color values into their corresponding named color representations, categorizing shades of grey from dark to light based on the intensity of the RGB values provided.\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 84;84;84\nOutput: Grey\nInput: 211;211;211\nOutput: LightGrey\nInput: 255;255;255\nOutput: White"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/DTT-test/DXF/RGBToColor.json",
    "input": "47;79;47",
    "output": "DarkOliveGreen",
    "ground_truth": "Dark Green",
    "is_correct": "False",
    "instruction": "Transform RGB color values into their corresponding named color representations, categorizing shades of grey from dark to light based on the intensity of the RGB values provided.\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 84;84;84\nOutput: Grey\nInput: 211;211;211\nOutput: LightGrey\nInput: 255;255;255\nOutput: White"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/DTT-test/DXF/RGBToColor.json",
    "input": "255;165;0",
    "output": "Orange",
    "ground_truth": "Orange",
    "is_correct": "True",
    "instruction": "Transform RGB color values into their corresponding named color representations, categorizing shades of grey from dark to light based on the intensity of the RGB values provided.\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 84;84;84\nOutput: Grey\nInput: 211;211;211\nOutput: LightGrey\nInput: 255;255;255\nOutput: White"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/DTT-test/DXF/fahrenheitToCelcius.json",
    "input": "41",
    "output": "5",
    "ground_truth": "5",
    "is_correct": "True",
    "instruction": "Convert temperature from Fahrenheit to Celsius.\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 32\nOutput: 0\nInput: 77\nOutput: 25\nInput: 30\nOutput: -1.11"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/DTT-test/DXF/fahrenheitToCelcius.json",
    "input": "59",
    "output": "15",
    "ground_truth": "15",
    "is_correct": "True",
    "instruction": "Convert temperature from Fahrenheit to Celsius.\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 32\nOutput: 0\nInput: 77\nOutput: 25\nInput: 30\nOutput: -1.11"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/DTT-test/DXF/fahrenheitToCelcius.json",
    "input": "68",
    "output": "20",
    "ground_truth": "20",
    "is_correct": "True",
    "instruction": "Convert temperature from Fahrenheit to Celsius.\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 32\nOutput: 0\nInput: 77\nOutput: 25\nInput: 30\nOutput: -1.11"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/DTT-test/DXF/fahrenheitToCelcius.json",
    "input": "212",
    "output": "100",
    "ground_truth": "100",
    "is_correct": "True",
    "instruction": "Convert temperature from Fahrenheit to Celsius.\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 32\nOutput: 0\nInput: 77\nOutput: 25\nInput: 30\nOutput: -1.11"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/DTT-test/DXF/fahrenheitToCelcius.json",
    "input": "50",
    "output": "10",
    "ground_truth": "10",
    "is_correct": "True",
    "instruction": "Convert temperature from Fahrenheit to Celsius.\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 32\nOutput: 0\nInput: 77\nOutput: 25\nInput: 30\nOutput: -1.11"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/DTT-test/DXF/fahrenheitToCelcius.json",
    "input": "86",
    "output": "30",
    "ground_truth": "30",
    "is_correct": "True",
    "instruction": "Convert temperature from Fahrenheit to Celsius.\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 32\nOutput: 0\nInput: 77\nOutput: 25\nInput: 30\nOutput: -1.11"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/DTT-test/DXF/shoesizeUSEUR.json",
    "input": "7.5",
    "output": "40",
    "ground_truth": "40",
    "is_correct": "True",
    "instruction": "Transform US shoe sizes to EU shoe sizes.\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 6\nOutput: 38\nInput: 6.5\nOutput: 38.7\nInput: 7\nOutput: 39.3"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/DTT-test/DXF/shoesizeUSEUR.json",
    "input": "8",
    "output": "40.7",
    "ground_truth": "40.5",
    "is_correct": "False",
    "instruction": "Transform US shoe sizes to EU shoe sizes.\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 6\nOutput: 38\nInput: 6.5\nOutput: 38.7\nInput: 7\nOutput: 39.3"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/DTT-test/DXF/shoesizeUSEUR.json",
    "input": "8.5",
    "output": "41.3",
    "ground_truth": "41",
    "is_correct": "False",
    "instruction": "Transform US shoe sizes to EU shoe sizes.\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 6\nOutput: 38\nInput: 6.5\nOutput: 38.7\nInput: 7\nOutput: 39.3"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/DTT-test/DXF/shoesizeUSEUR.json",
    "input": "9",
    "output": "42.7",
    "ground_truth": "42",
    "is_correct": "False",
    "instruction": "Transform US shoe sizes to EU shoe sizes.\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 6\nOutput: 38\nInput: 6.5\nOutput: 38.7\nInput: 7\nOutput: 39.3"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/DTT-test/DXF/shoesizeUSEUR.json",
    "input": "9.5",
    "output": "42.7",
    "ground_truth": "42.5",
    "is_correct": "False",
    "instruction": "Transform US shoe sizes to EU shoe sizes.\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 6\nOutput: 38\nInput: 6.5\nOutput: 38.7\nInput: 7\nOutput: 39.3"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/DTT-test/DXF/shoesizeUSEUR.json",
    "input": "10",
    "output": "43.3",
    "ground_truth": "43",
    "is_correct": "False",
    "instruction": "Transform US shoe sizes to EU shoe sizes.\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 6\nOutput: 38\nInput: 6.5\nOutput: 38.7\nInput: 7\nOutput: 39.3"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/DTT-test/DXF/shoesizeUSEUR.json",
    "input": "10.5",
    "output": "43.3",
    "ground_truth": "44",
    "is_correct": "False",
    "instruction": "Transform US shoe sizes to EU shoe sizes.\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 6\nOutput: 38\nInput: 6.5\nOutput: 38.7\nInput: 7\nOutput: 39.3"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/DTT-test/DXF/shoesizeUSEUR.json",
    "input": "11",
    "output": "44.7",
    "ground_truth": "44.5",
    "is_correct": "False",
    "instruction": "Transform US shoe sizes to EU shoe sizes.\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 6\nOutput: 38\nInput: 6.5\nOutput: 38.7\nInput: 7\nOutput: 39.3"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/DTT-test/DXF/shoesizeUSEUR.json",
    "input": "11.5",
    "output": "45.3",
    "ground_truth": "45",
    "is_correct": "False",
    "instruction": "Transform US shoe sizes to EU shoe sizes.\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 6\nOutput: 38\nInput: 6.5\nOutput: 38.7\nInput: 7\nOutput: 39.3"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/DTT-test/DXF/shoesizeUSEUR.json",
    "input": "12",
    "output": "46.7",
    "ground_truth": "46",
    "is_correct": "False",
    "instruction": "Transform US shoe sizes to EU shoe sizes.\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 6\nOutput: 38\nInput: 6.5\nOutput: 38.7\nInput: 7\nOutput: 39.3"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/DTT-test/DXF/shoesizeUSEUR.json",
    "input": "12.5",
    "output": "46.7",
    "ground_truth": "46.5",
    "is_correct": "False",
    "instruction": "Transform US shoe sizes to EU shoe sizes.\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 6\nOutput: 38\nInput: 6.5\nOutput: 38.7\nInput: 7\nOutput: 39.3"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/DTT-test/DXF/shoesizeUSEUR.json",
    "input": "13",
    "output": "47.3",
    "ground_truth": "47",
    "is_correct": "False",
    "instruction": "Transform US shoe sizes to EU shoe sizes.\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 6\nOutput: 38\nInput: 6.5\nOutput: 38.7\nInput: 7\nOutput: 39.3"
  }
]