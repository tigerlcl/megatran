[
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/1.json",
    "input": "3364.0",
    "output": "3364.0",
    "ground_truth": "3.36E3",
    "is_correct": "False",
    "instruction": "Use scientific notation only if needed\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: .2367\nOutput: 0.23\nInput: .00367\nOutput: 3.67E-3\nInput: 22.3\nOutput: 22.3"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/1.json",
    "input": "11",
    "output": "11",
    "ground_truth": "11",
    "is_correct": "True",
    "instruction": "Use scientific notation only if needed\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: .2367\nOutput: 0.23\nInput: .00367\nOutput: 3.67E-3\nInput: 22.3\nOutput: 22.3"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/10.json",
    "input": 4,
    "output": "8.8",
    "ground_truth": 8.8,
    "is_correct": "True",
    "instruction": "kgs to pounds, one digit after the decimal, rounding\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 1\nOutput: 2.2\nInput: 2\nOutput: 4.4\nInput: 3\nOutput: 6.6"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/10.json",
    "input": 5,
    "output": "11.0",
    "ground_truth": 11.0,
    "is_correct": "True",
    "instruction": "kgs to pounds, one digit after the decimal, rounding\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 1\nOutput: 2.2\nInput: 2\nOutput: 4.4\nInput: 3\nOutput: 6.6"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/10.json",
    "input": 6,
    "output": "13.2",
    "ground_truth": 13.2,
    "is_correct": "True",
    "instruction": "kgs to pounds, one digit after the decimal, rounding\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 1\nOutput: 2.2\nInput: 2\nOutput: 4.4\nInput: 3\nOutput: 6.6"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/10.json",
    "input": 7,
    "output": "15.4",
    "ground_truth": 15.4,
    "is_correct": "True",
    "instruction": "kgs to pounds, one digit after the decimal, rounding\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 1\nOutput: 2.2\nInput: 2\nOutput: 4.4\nInput: 3\nOutput: 6.6"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/10.json",
    "input": 8,
    "output": "17.6",
    "ground_truth": 17.6,
    "is_correct": "True",
    "instruction": "kgs to pounds, one digit after the decimal, rounding\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 1\nOutput: 2.2\nInput: 2\nOutput: 4.4\nInput: 3\nOutput: 6.6"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/10.json",
    "input": 9,
    "output": "19.8",
    "ground_truth": 19.8,
    "is_correct": "True",
    "instruction": "kgs to pounds, one digit after the decimal, rounding\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 1\nOutput: 2.2\nInput: 2\nOutput: 4.4\nInput: 3\nOutput: 6.6"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/10.json",
    "input": 10,
    "output": "22.0",
    "ground_truth": 22.0,
    "is_correct": "True",
    "instruction": "kgs to pounds, one digit after the decimal, rounding\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 1\nOutput: 2.2\nInput: 2\nOutput: 4.4\nInput: 3\nOutput: 6.6"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/10.json",
    "input": 11,
    "output": "24.3",
    "ground_truth": 24.3,
    "is_correct": "True",
    "instruction": "kgs to pounds, one digit after the decimal, rounding\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 1\nOutput: 2.2\nInput: 2\nOutput: 4.4\nInput: 3\nOutput: 6.6"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/10.json",
    "input": 12,
    "output": "26.4",
    "ground_truth": 26.5,
    "is_correct": "False",
    "instruction": "kgs to pounds, one digit after the decimal, rounding\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 1\nOutput: 2.2\nInput: 2\nOutput: 4.4\nInput: 3\nOutput: 6.6"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/11.json",
    "input": "123456789",
    "output": "123,456,789",
    "ground_truth": "123,456,789",
    "is_correct": "True",
    "instruction": "Add commas to numbers\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 1234567890\nOutput: 1,234,567,890\nInput: 2134\nOutput: 2,134\nInput: 1234.123\nOutput: 1,234.123"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/11.json",
    "input": "1234",
    "output": "1,234",
    "ground_truth": "1,234",
    "is_correct": "True",
    "instruction": "Add commas to numbers\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 1234567890\nOutput: 1,234,567,890\nInput: 2134\nOutput: 2,134\nInput: 1234.123\nOutput: 1,234.123"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/12.json",
    "input": "7321876984",
    "output": "7B",
    "ground_truth": "7M",
    "is_correct": "False",
    "instruction": "Number formatting using K, M, B\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 10000\nOutput: 10K\nInput: 212321\nOutput: 212K\nInput: 9876549\nOutput: 9M"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/12.json",
    "input": "1111111111",
    "output": "1B",
    "ground_truth": "1B",
    "is_correct": "True",
    "instruction": "Number formatting using K, M, B\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 10000\nOutput: 10K\nInput: 212321\nOutput: 212K\nInput: 9876549\nOutput: 9M"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/12.json",
    "input": "12123123123",
    "output": "12B",
    "ground_truth": "12B",
    "is_correct": "True",
    "instruction": "Number formatting using K, M, B\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 10000\nOutput: 10K\nInput: 212321\nOutput: 212K\nInput: 9876549\nOutput: 9M"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/12.json",
    "input": "10001",
    "output": "10K",
    "ground_truth": "10K",
    "is_correct": "True",
    "instruction": "Number formatting using K, M, B\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 10000\nOutput: 10K\nInput: 212321\nOutput: 212K\nInput: 9876549\nOutput: 9M"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/12.json",
    "input": "212341",
    "output": "212K",
    "ground_truth": "212K",
    "is_correct": "True",
    "instruction": "Number formatting using K, M, B\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 10000\nOutput: 10K\nInput: 212321\nOutput: 212K\nInput: 9876549\nOutput: 9M"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/12.json",
    "input": "9876149",
    "output": "9M",
    "ground_truth": "9M",
    "is_correct": "True",
    "instruction": "Number formatting using K, M, B\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 10000\nOutput: 10K\nInput: 212321\nOutput: 212K\nInput: 9876549\nOutput: 9M"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/12.json",
    "input": "7321176984",
    "output": "7B",
    "ground_truth": "7M",
    "is_correct": "False",
    "instruction": "Number formatting using K, M, B\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 10000\nOutput: 10K\nInput: 212321\nOutput: 212K\nInput: 9876549\nOutput: 9M"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/12.json",
    "input": "2111111111",
    "output": "2B",
    "ground_truth": "2B",
    "is_correct": "True",
    "instruction": "Number formatting using K, M, B\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 10000\nOutput: 10K\nInput: 212321\nOutput: 212K\nInput: 9876549\nOutput: 9M"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/12.json",
    "input": "22123123123",
    "output": "22B",
    "ground_truth": "22B",
    "is_correct": "True",
    "instruction": "Number formatting using K, M, B\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 10000\nOutput: 10K\nInput: 212321\nOutput: 212K\nInput: 9876549\nOutput: 9M"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/13.json",
    "input": "12334.137",
    "output": "12,334.14",
    "ground_truth": "12,334.13",
    "is_correct": "False",
    "instruction": "Number formatting, use , before . , and keep two digits after .\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 432324\nOutput: 432,324.00\nInput: 12334.13\nOutput: 12,334.13\nInput: 12334.133\nOutput: 12,334.13"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/14.json",
    "input": "1",
    "output": "01",
    "ground_truth": "01",
    "is_correct": "True",
    "instruction": "Pad numbers to the left\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 2\nOutput: 02\nInput: 3\nOutput: 03\nInput: 12\nOutput: 12"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/14.json",
    "input": "5",
    "output": "05",
    "ground_truth": "05",
    "is_correct": "True",
    "instruction": "Pad numbers to the left\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 2\nOutput: 02\nInput: 3\nOutput: 03\nInput: 12\nOutput: 12"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/15.json",
    "input": "2 3 4 5",
    "output": "2",
    "ground_truth": 2,
    "is_correct": "True",
    "instruction": "Parse an integer from a string with trailing garbage\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 1\nOutput: 1\nInput:  42 \nOutput: 42\nInput: 3 -x..\nOutput: 3"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/15.json",
    "input": "3 1 4 1",
    "output": "3",
    "ground_truth": 3,
    "is_correct": "True",
    "instruction": "Parse an integer from a string with trailing garbage\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 1\nOutput: 1\nInput:  42 \nOutput: 42\nInput: 3 -x..\nOutput: 3"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/15.json",
    "input": "21 asg",
    "output": "21",
    "ground_truth": 21,
    "is_correct": "True",
    "instruction": "Parse an integer from a string with trailing garbage\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 1\nOutput: 1\nInput:  42 \nOutput: 42\nInput: 3 -x..\nOutput: 3"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/16.json",
    "input": "Friday, 3rd April, 1989",
    "output": "April",
    "ground_truth": "April",
    "is_correct": "True",
    "instruction": "Extract month from datetime\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: Thursday, 1st January, 1970\nOutput: January\nInput: Wednesday, 2nd March, 1980\nOutput: March\nInput: Monday, 5th May, 1999\nOutput: May"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/16.json",
    "input": "Sunday, 3rd March, 2013",
    "output": "March",
    "ground_truth": "March",
    "is_correct": "True",
    "instruction": "Extract month from datetime\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: Thursday, 1st January, 1970\nOutput: January\nInput: Wednesday, 2nd March, 1980\nOutput: March\nInput: Monday, 5th May, 1999\nOutput: May"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/17.json",
    "input": "SunInTheRain",
    "output": "Sun In The Rain",
    "ground_truth": "Sun In The Rain",
    "is_correct": "True",
    "instruction": "Leave proper space\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: SampleText\nOutput: Sample Text\nInput: DoesNotMatterHowManyWords\nOutput: Does Not Matter How Many Words\nInput: WhatIf\nOutput: What If"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/17.json",
    "input": "TestIsGood",
    "output": "Test Is Good",
    "ground_truth": "Test Is Good",
    "is_correct": "True",
    "instruction": "Leave proper space\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: SampleText\nOutput: Sample Text\nInput: DoesNotMatterHowManyWords\nOutput: Does Not Matter How Many Words\nInput: WhatIf\nOutput: What If"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/18.json",
    "input": "Main page",
    "output": "MainPage",
    "ground_truth": "MainPage",
    "is_correct": "True",
    "instruction": "Concateneate words with Camel Case\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: Hello there everyone\nOutput: HelloThereEveryone\nInput: What is wrong\nOutput: WhatIsWrong\nInput: Wait for a while\nOutput: WaitForAWhile"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/18.json",
    "input": "Test is good for everyone",
    "output": "TestIsGoodForEveryone",
    "ground_truth": "TestIsGoodForEveryone",
    "is_correct": "True",
    "instruction": "Concateneate words with Camel Case\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: Hello there everyone\nOutput: HelloThereEveryone\nInput: What is wrong\nOutput: WhatIsWrong\nInput: Wait for a while\nOutput: WaitForAWhile"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/19.json",
    "input": "Everyday activity",
    "output": "EVERYDAY ACTIVITY",
    "ground_truth": "EVERYDAY ACTIVITY",
    "is_correct": "True",
    "instruction": "lower to upper case\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: What is the matter\nOutput: WHAT IS THE MATTER\nInput: Something is wrong\nOutput: SOMETHING IS WRONG\nInput: Background color\nOutput: BACKGROUND COLOR"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/19.json",
    "input": "Test is good for everyone",
    "output": "TEST IS GOOD FOR EVERYONE",
    "ground_truth": "TEST IS GOOD FOR EVERYONE",
    "is_correct": "True",
    "instruction": "lower to upper case\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: What is the matter\nOutput: WHAT IS THE MATTER\nInput: Something is wrong\nOutput: SOMETHING IS WRONG\nInput: Background color\nOutput: BACKGROUND COLOR"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/2.json",
    "input": "#",
    "output": "%23",
    "ground_truth": "%23",
    "is_correct": "True",
    "instruction": "convert non-ASCII characters to their URL-encoded equivalents\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput:  \nOutput: %20\nInput: !\nOutput: %21\nInput: \"\nOutput: %22"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/2.json",
    "input": "$",
    "output": "%24",
    "ground_truth": "%24",
    "is_correct": "True",
    "instruction": "convert non-ASCII characters to their URL-encoded equivalents\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput:  \nOutput: %20\nInput: !\nOutput: %21\nInput: \"\nOutput: %22"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/2.json",
    "input": "%",
    "output": "%25",
    "ground_truth": "%25",
    "is_correct": "True",
    "instruction": "convert non-ASCII characters to their URL-encoded equivalents\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput:  \nOutput: %20\nInput: !\nOutput: %21\nInput: \"\nOutput: %22"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/2.json",
    "input": "&",
    "output": "%26",
    "ground_truth": "%26",
    "is_correct": "True",
    "instruction": "convert non-ASCII characters to their URL-encoded equivalents\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput:  \nOutput: %20\nInput: !\nOutput: %21\nInput: \"\nOutput: %22"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/2.json",
    "input": "'",
    "output": "%27",
    "ground_truth": "%27",
    "is_correct": "True",
    "instruction": "convert non-ASCII characters to their URL-encoded equivalents\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput:  \nOutput: %20\nInput: !\nOutput: %21\nInput: \"\nOutput: %22"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/2.json",
    "input": "(",
    "output": "%28",
    "ground_truth": "%28",
    "is_correct": "True",
    "instruction": "convert non-ASCII characters to their URL-encoded equivalents\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput:  \nOutput: %20\nInput: !\nOutput: %21\nInput: \"\nOutput: %22"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/2.json",
    "input": ")",
    "output": "%29",
    "ground_truth": "%29",
    "is_correct": "True",
    "instruction": "convert non-ASCII characters to their URL-encoded equivalents\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput:  \nOutput: %20\nInput: !\nOutput: %21\nInput: \"\nOutput: %22"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/20.json",
    "input": "1   2  4  4",
    "output": "1 2 4 4",
    "ground_truth": "1 2 4 4",
    "is_correct": "True",
    "instruction": "replace multiple spaces with a single space\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 1 2 3 4   5\nOutput: 1 2 3 4 5\nInput: How are    you\nOutput: How are you\nInput: What   is the   matter\nOutput: What is the matter"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/20.json",
    "input": "How   fun",
    "output": "How fun",
    "ground_truth": "How fun",
    "is_correct": "True",
    "instruction": "replace multiple spaces with a single space\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 1 2 3 4   5\nOutput: 1 2 3 4 5\nInput: How are    you\nOutput: How are you\nInput: What   is the   matter\nOutput: What is the matter"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/21.json",
    "input": "Asp.Net Routing - Replace white spaces %20 with dashes from URLs generated",
    "output": "aspnet-routing-replace-white-spaces-20-with-dashes-from-urls-generated",
    "ground_truth": "asp-net-routing-replace-white-spaces-20-with-dashes-from-urls-generated",
    "is_correct": "False",
    "instruction": "How does Stack Overflow generate its SEO-friendly URLs?\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: How do you change a title to be part of the URL like Stack Overflow\nOutput: how-do-you-change-a-title-to-be-part-of-the-url-like-stack-overflow\nInput: Built-In Character Casing functions in .Net\nOutput: built-in-character-casing-functions-in-net\nInput: What's the difference between String and string\nOutput: whats-the-difference-between-string-and-string"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/21.json",
    "input": ".NET method to convert a string to sentence case",
    "output": "net-method-to-convert-a-string-to-sentence-case",
    "ground_truth": "net-method-to-convert-a-string-to-sentence-case",
    "is_correct": "True",
    "instruction": "How does Stack Overflow generate its SEO-friendly URLs?\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: How do you change a title to be part of the URL like Stack Overflow\nOutput: how-do-you-change-a-title-to-be-part-of-the-url-like-stack-overflow\nInput: Built-In Character Casing functions in .Net\nOutput: built-in-character-casing-functions-in-net\nInput: What's the difference between String and string\nOutput: whats-the-difference-between-string-and-string"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/22.json",
    "input": "(912)-444-5555",
    "output": "9124445555",
    "ground_truth": "9124445555",
    "is_correct": "True",
    "instruction": "Phone number processing\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 519-781-8816\nOutput: 5197818816\nInput: (913)-444-5555\nOutput: 9134445555\nInput: 509-791-8816\nOutput: 5097918816"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/22.json",
    "input": "4654764768",
    "output": "4654764768",
    "ground_truth": "4654764768",
    "is_correct": "True",
    "instruction": "Phone number processing\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 519-781-8816\nOutput: 5197818816\nInput: (913)-444-5555\nOutput: 9134445555\nInput: 509-791-8816\nOutput: 5097918816"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/23.json",
    "input": "9124445555",
    "output": "912-444-5555",
    "ground_truth": "912-444-5555",
    "is_correct": "True",
    "instruction": "Phone number processing\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 5197818816\nOutput: 519-781-8816\nInput: 9134445555\nOutput: 913-444-5555\nInput: 5097918816\nOutput: 509-791-8816"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/23.json",
    "input": "4654764768",
    "output": "465-476-4768",
    "ground_truth": "465-476-4768",
    "is_correct": "True",
    "instruction": "Phone number processing\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 5197818816\nOutput: 519-781-8816\nInput: 9134445555\nOutput: 913-444-5555\nInput: 5097918816\nOutput: 509-791-8816"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/24.json",
    "input": "AB12345CDE",
    "output": "A1B2C3D4E5",
    "ground_truth": "A1B2C3D4E5",
    "is_correct": "True",
    "instruction": "Sort alphanumeric string, then alternate numeric and alphabet characters\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: D4C3B2A1\nOutput: A1B2C3D4\nInput: E7C3B2A1\nOutput: A1B2C3E7\nInput: ABCDE12345\nOutput: A1B2C3D4E5"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/24.json",
    "input": "E12HY5",
    "output": "E1H2Y5",
    "ground_truth": "E1H2Y5",
    "is_correct": "True",
    "instruction": "Sort alphanumeric string, then alternate numeric and alphabet characters\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: D4C3B2A1\nOutput: A1B2C3D4\nInput: E7C3B2A1\nOutput: A1B2C3E7\nInput: ABCDE12345\nOutput: A1B2C3D4E5"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/25.json",
    "input": "April",
    "output": "4",
    "ground_truth": "4",
    "is_correct": "True",
    "instruction": "Month to number conversion\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: January\nOutput: 1\nInput: February\nOutput: 2\nInput: March\nOutput: 3"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/25.json",
    "input": "May",
    "output": "5",
    "ground_truth": "5",
    "is_correct": "True",
    "instruction": "Month to number conversion\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: January\nOutput: 1\nInput: February\nOutput: 2\nInput: March\nOutput: 3"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/25.json",
    "input": "June",
    "output": "6",
    "ground_truth": "6",
    "is_correct": "True",
    "instruction": "Month to number conversion\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: January\nOutput: 1\nInput: February\nOutput: 2\nInput: March\nOutput: 3"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/25.json",
    "input": "July",
    "output": "7",
    "ground_truth": "7",
    "is_correct": "True",
    "instruction": "Month to number conversion\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: January\nOutput: 1\nInput: February\nOutput: 2\nInput: March\nOutput: 3"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/25.json",
    "input": "August",
    "output": "8",
    "ground_truth": "8",
    "is_correct": "True",
    "instruction": "Month to number conversion\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: January\nOutput: 1\nInput: February\nOutput: 2\nInput: March\nOutput: 3"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/25.json",
    "input": "September",
    "output": "9",
    "ground_truth": "9",
    "is_correct": "True",
    "instruction": "Month to number conversion\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: January\nOutput: 1\nInput: February\nOutput: 2\nInput: March\nOutput: 3"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/25.json",
    "input": "October",
    "output": "10",
    "ground_truth": "10",
    "is_correct": "True",
    "instruction": "Month to number conversion\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: January\nOutput: 1\nInput: February\nOutput: 2\nInput: March\nOutput: 3"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/25.json",
    "input": "November",
    "output": "11",
    "ground_truth": "11",
    "is_correct": "True",
    "instruction": "Month to number conversion\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: January\nOutput: 1\nInput: February\nOutput: 2\nInput: March\nOutput: 3"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/25.json",
    "input": "December",
    "output": "12",
    "ground_truth": "12",
    "is_correct": "True",
    "instruction": "Month to number conversion\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: January\nOutput: 1\nInput: February\nOutput: 2\nInput: March\nOutput: 3"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/26.json",
    "input": "<sample3 xns:id=\"7f04f178-f235-4647-8584-c4e77f73fecf\">c</sample3>",
    "output": "<sample3>c</sample3>",
    "ground_truth": "<sample3>c</sample3>",
    "is_correct": "True",
    "instruction": "How to filter out xml attributes?\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: <sample1 xns:id=\"e7b014d9-6271-4e32-921d-7488edfd6ea4\">a</sample1>\nOutput: <sample1>a</sample1>\nInput: <sample2 xns:id=\"d3450e86-7264-4512-9891-6c7183257741\">b</sample2>\nOutput: <sample2>b</sample2>\nInput: <sample4 xns:id=\"abc\">xyz</sample3>\nOutput: <sample3>xyz</sample3>"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/26.json",
    "input": "<sample6 xns:id=\"test\">b</sample6>",
    "output": "<sample6>b</sample6>",
    "ground_truth": "<sample6>b</sample6>",
    "is_correct": "True",
    "instruction": "How to filter out xml attributes?\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: <sample1 xns:id=\"e7b014d9-6271-4e32-921d-7488edfd6ea4\">a</sample1>\nOutput: <sample1>a</sample1>\nInput: <sample2 xns:id=\"d3450e86-7264-4512-9891-6c7183257741\">b</sample2>\nOutput: <sample2>b</sample2>\nInput: <sample4 xns:id=\"abc\">xyz</sample3>\nOutput: <sample3>xyz</sample3>"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/27.json",
    "input": "55",
    "output": "13",
    "ground_truth": "13",
    "is_correct": "True",
    "instruction": "F -> C, need calculation + rounding\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 40\nOutput: 4\nInput: 45\nOutput: 7\nInput: 50\nOutput: 10"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/27.json",
    "input": "60",
    "output": "16",
    "ground_truth": "16",
    "is_correct": "True",
    "instruction": "F -> C, need calculation + rounding\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 40\nOutput: 4\nInput: 45\nOutput: 7\nInput: 50\nOutput: 10"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/28.json",
    "input": "092378LLLL111",
    "output": "092378LLLL111",
    "ground_truth": "092378LLLL111",
    "is_correct": "True",
    "instruction": "Most efficient way to remove special characters from string, only allow A-Z a-Z 0-9\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: BA(kfa1237fdn\nOutput: BAkfa1237fdn\nInput: *9kk12jf7eYTk1\nOutput: 9kk12jf7eYTk1\nInput: ()kjfdsk13^$$*A\nOutput: kjfdsk13A"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/28.json",
    "input": "11PP))(*(&^%%&*",
    "output": "11PP",
    "ground_truth": "11PP",
    "is_correct": "True",
    "instruction": "Most efficient way to remove special characters from string, only allow A-Z a-Z 0-9\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: BA(kfa1237fdn\nOutput: BAkfa1237fdn\nInput: *9kk12jf7eYTk1\nOutput: 9kk12jf7eYTk1\nInput: ()kjfdsk13^$$*A\nOutput: kjfdsk13A"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/29.json",
    "input": "H2",
    "output": "2H",
    "ground_truth": "2H",
    "is_correct": "True",
    "instruction": "Chemistry: Parsing a chemical formula\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: Pb\nOutput: Pb\nInput: H\nOutput: H\nInput: Pb2\nOutput: 2Pb"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/29.json",
    "input": "3Pb2",
    "output": "6Pb",
    "ground_truth": "6Pb",
    "is_correct": "True",
    "instruction": "Chemistry: Parsing a chemical formula\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: Pb\nOutput: Pb\nInput: H\nOutput: H\nInput: Pb2\nOutput: 2Pb"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/29.json",
    "input": "PbH2",
    "output": "2H Pb",
    "ground_truth": "Pb 2H",
    "is_correct": "False",
    "instruction": "Chemistry: Parsing a chemical formula\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: Pb\nOutput: Pb\nInput: H\nOutput: H\nInput: Pb2\nOutput: 2Pb"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/29.json",
    "input": "(PbH2)2",
    "output": "2Pb2H2",
    "ground_truth": "2Pb 4H",
    "is_correct": "False",
    "instruction": "Chemistry: Parsing a chemical formula\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: Pb\nOutput: Pb\nInput: H\nOutput: H\nInput: Pb2\nOutput: 2Pb"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/29.json",
    "input": "Pb(H2)2",
    "output": "4H + Pb",
    "ground_truth": "Pb 4H",
    "is_correct": "False",
    "instruction": "Chemistry: Parsing a chemical formula\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: Pb\nOutput: Pb\nInput: H\nOutput: H\nInput: Pb2\nOutput: 2Pb"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/29.json",
    "input": "(Pb(H2)2)2NO3",
    "output": "4H2Pb2NO3",
    "ground_truth": "2Pb 8H N 3O",
    "is_correct": "False",
    "instruction": "Chemistry: Parsing a chemical formula\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: Pb\nOutput: Pb\nInput: H\nOutput: H\nInput: Pb2\nOutput: 2Pb"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/29.json",
    "input": "(Ag(Pb(H2)2)2)2SO4",
    "output": "16H 4Ag 4Pb SO4",
    "ground_truth": "2Ag 4Pb 16H S 4O",
    "is_correct": "False",
    "instruction": "Chemistry: Parsing a chemical formula\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: Pb\nOutput: Pb\nInput: H\nOutput: H\nInput: Pb2\nOutput: 2Pb"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/29.json",
    "input": "Pb(CH3(CH2)2CH3)2",
    "output": "2Pb2C8H18",
    "ground_truth": "Pb 2C 6H 4C 8H 2C 6H",
    "is_correct": "False",
    "instruction": "Chemistry: Parsing a chemical formula\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: Pb\nOutput: Pb\nInput: H\nOutput: H\nInput: Pb2\nOutput: 2Pb"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/29.json",
    "input": "Na2(CH3(CH2)2CH3)2",
    "output": "2Na(C2H6C)2",
    "ground_truth": "2Na 2C 6H 4C 8H 2C 6H",
    "is_correct": "False",
    "instruction": "Chemistry: Parsing a chemical formula\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: Pb\nOutput: Pb\nInput: H\nOutput: H\nInput: Pb2\nOutput: 2Pb"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/29.json",
    "input": "Tc(H2O)3Fe3(SO4)2",
    "output": "Tc3H6O3Fe3S2O8",
    "ground_truth": "Tc 6H 3O 3Fe 2S 8O",
    "is_correct": "False",
    "instruction": "Chemistry: Parsing a chemical formula\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: Pb\nOutput: Pb\nInput: H\nOutput: H\nInput: Pb2\nOutput: 2Pb"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/29.json",
    "input": "Tc(H2O)3(Fe3(SO4)2)2",
    "output": "3H2O2Fe33SO42Tc",
    "ground_truth": "Tc 6H 3O 6Fe 4S 16O",
    "is_correct": "False",
    "instruction": "Chemistry: Parsing a chemical formula\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: Pb\nOutput: Pb\nInput: H\nOutput: H\nInput: Pb2\nOutput: 2Pb"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/29.json",
    "input": "(Tc(H2O)3(Fe3(SO4)2)2)2",
    "output": "2Tc3H2O2Fe3(SO4)",
    "ground_truth": "2Tc 12H 6O 12Fe 8S 32O",
    "is_correct": "False",
    "instruction": "Chemistry: Parsing a chemical formula\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: Pb\nOutput: Pb\nInput: H\nOutput: H\nInput: Pb2\nOutput: 2Pb"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/29.json",
    "input": "(Tc(H2O)3CO(Fe3(SO4)2)2)2",
    "output": "2Tc3H2O2CO8Fe6S2O",
    "ground_truth": "2Tc 12H 6O 2C 2O 12Fe 8S 32O",
    "is_correct": "False",
    "instruction": "Chemistry: Parsing a chemical formula\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: Pb\nOutput: Pb\nInput: H\nOutput: H\nInput: Pb2\nOutput: 2Pb"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/3.json",
    "input": "<b>test</b>",
    "output": "test",
    "ground_truth": "test",
    "is_correct": "True",
    "instruction": "Remove HTML tags from string\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: <b>Hello World.</b><br/><p><i>Is there anyone out there?</i><p>\nOutput: Hello World. Is there anyone out there?\nInput: <html><body>bla bla</td><td>bla bla<body><html>\nOutput: bla bla bla bla\nInput: <b>hello world!</b><br /><i>it is me! !</i>\nOutput: hello world! it is me! !"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/30.json",
    "input": "9/3",
    "output": "3",
    "ground_truth": "3",
    "is_correct": "True",
    "instruction": "Math expressions evaluation\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 3+6\nOutput: 9\nInput: 40-9\nOutput: 31\nInput: 2*6\nOutput: 12"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/30.json",
    "input": "1+9-2",
    "output": "8",
    "ground_truth": "8",
    "is_correct": "True",
    "instruction": "Math expressions evaluation\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 3+6\nOutput: 9\nInput: 40-9\nOutput: 31\nInput: 2*6\nOutput: 12"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/30.json",
    "input": "1+4/2",
    "output": "3",
    "ground_truth": "3",
    "is_correct": "True",
    "instruction": "Math expressions evaluation\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 3+6\nOutput: 9\nInput: 40-9\nOutput: 31\nInput: 2*6\nOutput: 12"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/31.json",
    "input": 100000,
    "output": "one hundred thousand",
    "ground_truth": "one hundred thousand",
    "is_correct": "True",
    "instruction": "How to convert number to words in Python\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 10183\nOutput: ten thousand one hundred eighty three\nInput: 90\nOutput: ninety\nInput: 5888\nOutput: five thousand eight hundred eighty eight"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/31.json",
    "input": 999999,
    "output": "nine hundred ninety nine thousand nine hundred ninety nine",
    "ground_truth": "nine hundred ninety-nine thousand nine hundred ninety-nine",
    "is_correct": "False",
    "instruction": "How to convert number to words in Python\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 10183\nOutput: ten thousand one hundred eighty three\nInput: 90\nOutput: ninety\nInput: 5888\nOutput: five thousand eight hundred eighty eight"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/31.json",
    "input": 1000001,
    "output": "one million one",
    "ground_truth": "one million one",
    "is_correct": "True",
    "instruction": "How to convert number to words in Python\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 10183\nOutput: ten thousand one hundred eighty three\nInput: 90\nOutput: ninety\nInput: 5888\nOutput: five thousand eight hundred eighty eight"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/31.json",
    "input": 10000007,
    "output": "ten million seven",
    "ground_truth": "ten million seven",
    "is_correct": "True",
    "instruction": "How to convert number to words in Python\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 10183\nOutput: ten thousand one hundred eighty three\nInput: 90\nOutput: ninety\nInput: 5888\nOutput: five thousand eight hundred eighty eight"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/32.json",
    "input": "GACTA",
    "output": "CTGAT",
    "ground_truth": "CTGAT",
    "is_correct": "True",
    "instruction": "Algorithm help! Fast algorithm in searching for a string with its partner\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: TAGTC\nOutput: ATCAG\nInput: CGCAT\nOutput: GCGTA\nInput: ACCAG\nOutput: TGGTC"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/32.json",
    "input": "CGCAA",
    "output": "GCGTT",
    "ground_truth": "GCGTT",
    "is_correct": "True",
    "instruction": "Algorithm help! Fast algorithm in searching for a string with its partner\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: TAGTC\nOutput: ATCAG\nInput: CGCAT\nOutput: GCGTA\nInput: ACCAG\nOutput: TGGTC"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/33.json",
    "input": "orange",
    "output": "an orange",
    "ground_truth": "an orange",
    "is_correct": "True",
    "instruction": "Prefix a word with 'a' or 'an'\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: used car\nOutput: a used car\nInput: honest mistake\nOutput: an honest mistake\nInput: computer\nOutput: a computer"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/33.json",
    "input": "hour",
    "output": "an hour",
    "ground_truth": "an hour",
    "is_correct": "True",
    "instruction": "Prefix a word with 'a' or 'an'\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: used car\nOutput: a used car\nInput: honest mistake\nOutput: an honest mistake\nInput: computer\nOutput: a computer"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/34.json",
    "input": "4, 5, 6, 7, 8, 9, 10, 11, 12",
    "output": "8",
    "ground_truth": 8,
    "is_correct": "True",
    "instruction": "Median\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 2, 2, 3, 4, 7, 8, 9\nOutput: 4\nInput: 1, 2, 3, 5, 6, 7, 8\nOutput: 5\nInput: 1, 2, 3\nOutput: 2"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/34.json",
    "input": "1, 2, 3, 4, 5",
    "output": "3",
    "ground_truth": 3,
    "is_correct": "True",
    "instruction": "Median\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 2, 2, 3, 4, 7, 8, 9\nOutput: 4\nInput: 1, 2, 3, 5, 6, 7, 8\nOutput: 5\nInput: 1, 2, 3\nOutput: 2"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/35.json",
    "input": "2015-02-28",
    "output": "2015-03-01",
    "ground_truth": "2015-03-01",
    "is_correct": "True",
    "instruction": "Increment date by one day\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 2007-01-01\nOutput: 2007-01-02\nInput: 2008-12-12\nOutput: 2008-12-13\nInput: 2009-03-31\nOutput: 2010-04-01"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/35.json",
    "input": "2015-12-31",
    "output": "2016-01-01",
    "ground_truth": "2016-01-01",
    "is_correct": "True",
    "instruction": "Increment date by one day\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 2007-01-01\nOutput: 2007-01-02\nInput: 2008-12-12\nOutput: 2008-12-13\nInput: 2009-03-31\nOutput: 2010-04-01"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/36.json",
    "input": "2011/12/22",
    "output": "12/22/2011",
    "ground_truth": "12/22/2011",
    "is_correct": "True",
    "instruction": "Convert date from y-m-d to m/d/y\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 2009/8/19\nOutput: 8/19/2009\nInput: 2001/12/12\nOutput: 12/12/2001\nInput: 2014/3/20\nOutput: 3/20/2014"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/36.json",
    "input": "2012/4/11",
    "output": "4/11/2012",
    "ground_truth": "4/11/2012",
    "is_correct": "True",
    "instruction": "Convert date from y-m-d to m/d/y\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 2009/8/19\nOutput: 8/19/2009\nInput: 2001/12/12\nOutput: 12/12/2001\nInput: 2014/3/20\nOutput: 3/20/2014"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/37.json",
    "input": "05/09/2014",
    "output": "May",
    "ground_truth": "May",
    "is_correct": "True",
    "instruction": "Get month name from Date\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 10/11/2009\nOutput: October\nInput: 01/12/2012\nOutput: January\nInput: 03/14/2013\nOutput: March"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/37.json",
    "input": "12/12/2012",
    "output": "December",
    "ground_truth": "December",
    "is_correct": "True",
    "instruction": "Get month name from Date\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 10/11/2009\nOutput: October\nInput: 01/12/2012\nOutput: January\nInput: 03/14/2013\nOutput: March"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/38.json",
    "input": "Lucy Goodman",
    "output": "L. Goodman",
    "ground_truth": "L. Goodman",
    "is_correct": "True",
    "instruction": "person name abbreviation\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: Jack Bauer\nOutput: J. Bauer\nInput: Charles Wooten\nOutput: C. Wooten\nInput: Kim Lee\nOutput: K. Lee"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/38.json",
    "input": "Rachel Green",
    "output": "R. Green",
    "ground_truth": "R. Green",
    "is_correct": "True",
    "instruction": "person name abbreviation\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: Jack Bauer\nOutput: J. Bauer\nInput: Charles Wooten\nOutput: C. Wooten\nInput: Kim Lee\nOutput: K. Lee"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/39.json",
    "input": "123412345",
    "output": "1234,1234,5",
    "ground_truth": "1234,1234,5",
    "is_correct": "True",
    "instruction": "Splitting string into sizes of 4\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 1111222233334444\nOutput: 1111,2222,3333,4444\nInput: 123412341234\nOutput: 1234,1234,1234\nInput: 1111222\nOutput: 1111,222"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/39.json",
    "input": "1",
    "output": "1",
    "ground_truth": "1",
    "is_correct": "True",
    "instruction": "Splitting string into sizes of 4\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 1111222233334444\nOutput: 1111,2222,3333,4444\nInput: 123412341234\nOutput: 1234,1234,1234\nInput: 1111222\nOutput: 1111,222"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/4.json",
    "input": "123123",
    "output": "123",
    "ground_truth": "123",
    "is_correct": "True",
    "instruction": "Get distinct characters of a string\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: DHCH\nOutput: DHC\nInput: KLKLHHMO\nOutput: KLHMO\nInput: XUCHU\nOutput: XUCH"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/4.json",
    "input": "9090",
    "output": "90",
    "ground_truth": "90",
    "is_correct": "True",
    "instruction": "Get distinct characters of a string\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: DHCH\nOutput: DHC\nInput: KLKLHHMO\nOutput: KLHMO\nInput: XUCHU\nOutput: XUCH"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/40.json",
    "input": "1, 100, 2",
    "output": "45.828",
    "ground_truth": 56.871,
    "is_correct": "False",
    "instruction": "Standard Deviation Calculation\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 12, 13, 14, 12\nOutput: 0.957\nInput: 12, 13, 14, 12, 5\nOutput: 3.564\nInput: 12, 12\nOutput: 0"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/40.json",
    "input": "1, 100, 2, 50",
    "output": "43.790",
    "ground_truth": 47.091,
    "is_correct": "False",
    "instruction": "Standard Deviation Calculation\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 12, 13, 14, 12\nOutput: 0.957\nInput: 12, 13, 14, 12, 5\nOutput: 3.564\nInput: 12, 12\nOutput: 0"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/41.json",
    "input": "129.97.208.23",
    "output": "Canada",
    "ground_truth": "Canada",
    "is_correct": "True",
    "instruction": "ip address to country\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 131.107.160.83\nOutput: United States\nInput: 103.235.46.39\nOutput: Hong Kong\nInput: 151.249.89.230\nOutput: Germany"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/41.json",
    "input": "173.194.44.50",
    "output": "United States",
    "ground_truth": "United States",
    "is_correct": "True",
    "instruction": "ip address to country\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 131.107.160.83\nOutput: United States\nInput: 103.235.46.39\nOutput: Hong Kong\nInput: 151.249.89.230\nOutput: Germany"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/41.json",
    "input": "77.67.27.8",
    "output": "Belgium",
    "ground_truth": "Germany",
    "is_correct": "False",
    "instruction": "ip address to country\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 131.107.160.83\nOutput: United States\nInput: 103.235.46.39\nOutput: Hong Kong\nInput: 151.249.89.230\nOutput: Germany"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/42.json",
    "input": "2010",
    "output": "common",
    "ground_truth": "common",
    "is_correct": "True",
    "instruction": "Year to common year or leap year\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 2007\nOutput: common\nInput: 2008\nOutput: leap\nInput: 2009\nOutput: common"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/42.json",
    "input": "2011",
    "output": "common",
    "ground_truth": "common",
    "is_correct": "True",
    "instruction": "Year to common year or leap year\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 2007\nOutput: common\nInput: 2008\nOutput: leap\nInput: 2009\nOutput: common"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/42.json",
    "input": "2012",
    "output": "leap",
    "ground_truth": "leap",
    "is_correct": "True",
    "instruction": "Year to common year or leap year\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 2007\nOutput: common\nInput: 2008\nOutput: leap\nInput: 2009\nOutput: common"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/42.json",
    "input": "2016",
    "output": "leap",
    "ground_truth": "leap",
    "is_correct": "True",
    "instruction": "Year to common year or leap year\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 2007\nOutput: common\nInput: 2008\nOutput: leap\nInput: 2009\nOutput: common"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/42.json",
    "input": "2017",
    "output": "common",
    "ground_truth": "common",
    "is_correct": "True",
    "instruction": "Year to common year or leap year\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 2007\nOutput: common\nInput: 2008\nOutput: leap\nInput: 2009\nOutput: common"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/43.json",
    "input": "asdf",
    "output": "invalid",
    "ground_truth": "invalid",
    "is_correct": "True",
    "instruction": "Email Validation\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: testing@invalid@email.com\nOutput: invalid\nInput: walter@xyz.com\nOutput: walter@xyz.com\nInput: tom@qq.com\nOutput: tom@qq.com"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/43.json",
    "input": "ab@xyz.xyz",
    "output": "ab@xyz.xyz",
    "ground_truth": "ab@xyz.xyz",
    "is_correct": "True",
    "instruction": "Email Validation\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: testing@invalid@email.com\nOutput: invalid\nInput: walter@xyz.com\nOutput: walter@xyz.com\nInput: tom@qq.com\nOutput: tom@qq.com"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/43.json",
    "input": "wa@lter@xyz.com",
    "output": "invalid",
    "ground_truth": "invalid",
    "is_correct": "True",
    "instruction": "Email Validation\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: testing@invalid@email.com\nOutput: invalid\nInput: walter@xyz.com\nOutput: walter@xyz.com\nInput: tom@qq.com\nOutput: tom@qq.com"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/44.json",
    "input": "299-398-0003",
    "output": "299-398-0003",
    "ground_truth": "299-398-0003",
    "is_correct": "True",
    "instruction": "phone number, default 425\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 499-999-2020\nOutput: 499-999-2020\nInput: 999-2020\nOutput: 425-999-2020\nInput: 390-9292\nOutput: 425-390-9292"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/44.json",
    "input": "321-2020",
    "output": "425-321-2020",
    "ground_truth": "425-321-2020",
    "is_correct": "True",
    "instruction": "phone number, default 425\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 499-999-2020\nOutput: 499-999-2020\nInput: 999-2020\nOutput: 425-999-2020\nInput: 390-9292\nOutput: 425-390-9292"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/45.json",
    "input": "(288) 3998888",
    "output": "288-399-8888",
    "ground_truth": "288-399-8888",
    "is_correct": "True",
    "instruction": "phone number, default 425\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 390-9292\nOutput: 425-390-9292\nInput: 499-999-2020\nOutput: 499-999-2020\nInput: (299)-398-0003\nOutput: 299-398-0003"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/45.json",
    "input": "999-2020",
    "output": "425-999-2020",
    "ground_truth": "425-999-2020",
    "is_correct": "True",
    "instruction": "phone number, default 425\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 390-9292\nOutput: 425-390-9292\nInput: 499-999-2020\nOutput: 499-999-2020\nInput: (299)-398-0003\nOutput: 299-398-0003"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/45.json",
    "input": "425-9990200",
    "output": "425-9990200",
    "ground_truth": "425-999-0200",
    "is_correct": "False",
    "instruction": "phone number, default 425\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 390-9292\nOutput: 425-390-9292\nInput: 499-999-2020\nOutput: 499-999-2020\nInput: (299)-398-0003\nOutput: 299-398-0003"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/46.json",
    "input": "{{p, q}, {r, s, t}, {u, v, w}}",
    "output": "r",
    "ground_truth": "r",
    "is_correct": "True",
    "instruction": "First element in the second set\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: {{aaa, bbb}, {ccc, ddd}, {eee, fff}}\nOutput: ccc\nInput: {{x, y}, {z, zz}}\nOutput: z\nInput: {{a}, {bb}, {ccc, ddd, eee, fff}}\nOutput: bb"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/47.json",
    "input": "This is MY work",
    "output": "['MY']",
    "ground_truth": [
      "MY"
    ],
    "is_correct": "False",
    "instruction": "capture capital words\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: This is one of the best breakfasts I have had! Is the decor dated? Absolutely but it just adds to the nostalgic charm! The place just reeks of beef cooking... Ahhh delicious! Check out the pastry cases!!!! OMG, is all I have to say!\nOutput: ['OMG']\nInput: When she asked if we had reservations, I replied no, and she commented NO? You KNOW IT IS SATURDAY. I wanted to say yes, yesterday was Friday and tomorrow is Sunday. Instead I replied that I was TERRIBLY sorry i did not realize i needed a reservation\nOutput: ['NO', 'KNOW', 'IT', 'IS', 'SATURDAY', 'TERRIBLY']\nInput: ABC ajib DDD xyz\nOutput: ['ABC', 'DDD']"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/47.json",
    "input": "HOW ARE YOU",
    "output": "['HOW', 'ARE', 'YOU']",
    "ground_truth": [
      "HOW",
      "ARE",
      "YOU"
    ],
    "is_correct": "False",
    "instruction": "capture capital words\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: This is one of the best breakfasts I have had! Is the decor dated? Absolutely but it just adds to the nostalgic charm! The place just reeks of beef cooking... Ahhh delicious! Check out the pastry cases!!!! OMG, is all I have to say!\nOutput: ['OMG']\nInput: When she asked if we had reservations, I replied no, and she commented NO? You KNOW IT IS SATURDAY. I wanted to say yes, yesterday was Friday and tomorrow is Sunday. Instead I replied that I was TERRIBLY sorry i did not realize i needed a reservation\nOutput: ['NO', 'KNOW', 'IT', 'IS', 'SATURDAY', 'TERRIBLY']\nInput: ABC ajib DDD xyz\nOutput: ['ABC', 'DDD']"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/48.json",
    "input": "2011/12/22",
    "output": "12/22/2011",
    "ground_truth": "12/22/2011",
    "is_correct": "True",
    "instruction": "convert y-m-d to m/d/y, add 0 if necessary\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 2009/8/1\nOutput: 08/01/2009\nInput: 2001/12/12\nOutput: 12/12/2001\nInput: 2014/3/2\nOutput: 03/02/2014"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/48.json",
    "input": "2012/4/11",
    "output": "04/11/2012",
    "ground_truth": "04/11/2012",
    "is_correct": "True",
    "instruction": "convert y-m-d to m/d/y, add 0 if necessary\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 2009/8/1\nOutput: 08/01/2009\nInput: 2001/12/12\nOutput: 12/12/2001\nInput: 2014/3/2\nOutput: 03/02/2014"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/49.json",
    "input": 1,
    "output": "21",
    "ground_truth": 21,
    "is_correct": "True",
    "instruction": "plus 20\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 25\nOutput: 45\nInput: 35\nOutput: 55\nInput: 10\nOutput: 30"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/49.json",
    "input": 11,
    "output": "31",
    "ground_truth": 31,
    "is_correct": "True",
    "instruction": "plus 20\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 25\nOutput: 45\nInput: 35\nOutput: 55\nInput: 10\nOutput: 30"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/5.json",
    "input": "facebook.com",
    "output": "facebook.com",
    "ground_truth": "facebook.com",
    "is_correct": "True",
    "instruction": "How to strip http:// and www. from an entered domain name using c#\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: http://stackoverflow.com\nOutput: stackoverflow.com\nInput: www.stackoverflow.com\nOutput: stackoverflow.com\nInput: http://www.stackoverflow.com\nOutput: stackoverflow.com"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/5.json",
    "input": "www.facebook.com",
    "output": "facebook.com",
    "ground_truth": "facebook.com",
    "is_correct": "True",
    "instruction": "How to strip http:// and www. from an entered domain name using c#\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: http://stackoverflow.com\nOutput: stackoverflow.com\nInput: www.stackoverflow.com\nOutput: stackoverflow.com\nInput: http://www.stackoverflow.com\nOutput: stackoverflow.com"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/5.json",
    "input": "http://facebook.com",
    "output": "facebook.com",
    "ground_truth": "facebook.com",
    "is_correct": "True",
    "instruction": "How to strip http:// and www. from an entered domain name using c#\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: http://stackoverflow.com\nOutput: stackoverflow.com\nInput: www.stackoverflow.com\nOutput: stackoverflow.com\nInput: http://www.stackoverflow.com\nOutput: stackoverflow.com"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/5.json",
    "input": "http://www.facebook.com",
    "output": "facebook.com",
    "ground_truth": "facebook.com",
    "is_correct": "True",
    "instruction": "How to strip http:// and www. from an entered domain name using c#\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: http://stackoverflow.com\nOutput: stackoverflow.com\nInput: www.stackoverflow.com\nOutput: stackoverflow.com\nInput: http://www.stackoverflow.com\nOutput: stackoverflow.com"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/5.json",
    "input": "google.com",
    "output": "google.com",
    "ground_truth": "google.com",
    "is_correct": "True",
    "instruction": "How to strip http:// and www. from an entered domain name using c#\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: http://stackoverflow.com\nOutput: stackoverflow.com\nInput: www.stackoverflow.com\nOutput: stackoverflow.com\nInput: http://www.stackoverflow.com\nOutput: stackoverflow.com"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/5.json",
    "input": "www.google.com",
    "output": "google.com",
    "ground_truth": "google.com",
    "is_correct": "True",
    "instruction": "How to strip http:// and www. from an entered domain name using c#\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: http://stackoverflow.com\nOutput: stackoverflow.com\nInput: www.stackoverflow.com\nOutput: stackoverflow.com\nInput: http://www.stackoverflow.com\nOutput: stackoverflow.com"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/5.json",
    "input": "http://google.com",
    "output": "google.com",
    "ground_truth": "google.com",
    "is_correct": "True",
    "instruction": "How to strip http:// and www. from an entered domain name using c#\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: http://stackoverflow.com\nOutput: stackoverflow.com\nInput: www.stackoverflow.com\nOutput: stackoverflow.com\nInput: http://www.stackoverflow.com\nOutput: stackoverflow.com"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/5.json",
    "input": "http://www.google.com",
    "output": "google.com",
    "ground_truth": "google.com",
    "is_correct": "True",
    "instruction": "How to strip http:// and www. from an entered domain name using c#\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: http://stackoverflow.com\nOutput: stackoverflow.com\nInput: www.stackoverflow.com\nOutput: stackoverflow.com\nInput: http://www.stackoverflow.com\nOutput: stackoverflow.com"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/6.json",
    "input": "www.cs.uwaterloo.ca",
    "output": "cs.uwaterloo",
    "ground_truth": "cs.uwaterloo",
    "is_correct": "True",
    "instruction": "Extract something between the first dot and the last dot, not so good an example, don't know what it tries to do\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: www.google.com\nOutput: google\nInput: www.facebook.com\nOutput: facebook\nInput: www.sina.cn\nOutput: sina"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/6.json",
    "input": "www.abc.com",
    "output": "abc",
    "ground_truth": "abc",
    "is_correct": "True",
    "instruction": "Extract something between the first dot and the last dot, not so good an example, don't know what it tries to do\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: www.google.com\nOutput: google\nInput: www.facebook.com\nOutput: facebook\nInput: www.sina.cn\nOutput: sina"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/7.json",
    "input": "ftp://username:password@website.com",
    "output": "website.com",
    "ground_truth": "website.com",
    "is_correct": "True",
    "instruction": "Get a domain name from a URL\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: http://www.google.com/url?sa=t&source=web&ct=res&cd=1&ved=0CAgQFjAA&url=http://www.test.com/&rct=j&q=test&ei=G2phS-HdJJWTjAfckvHJDA&usg=AFQjCNFSEAztaqtkaIvEzxmRm2uOARn1kQ\nOutput: google.com\nInput: http://www.beta.microsoft.com/path/page.htm\nOutput: microsoft.com\nInput: http://www.beta.microsoft.co.uk/path/page.htm\nOutput: microsoft.co.uk"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/7.json",
    "input": "http://www.microsoft.com/",
    "output": "microsoft.com",
    "ground_truth": "microsoft.com",
    "is_correct": "True",
    "instruction": "Get a domain name from a URL\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: http://www.google.com/url?sa=t&source=web&ct=res&cd=1&ved=0CAgQFjAA&url=http://www.test.com/&rct=j&q=test&ei=G2phS-HdJJWTjAfckvHJDA&usg=AFQjCNFSEAztaqtkaIvEzxmRm2uOARn1kQ\nOutput: google.com\nInput: http://www.beta.microsoft.com/path/page.htm\nOutput: microsoft.com\nInput: http://www.beta.microsoft.co.uk/path/page.htm\nOutput: microsoft.co.uk"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/8.json",
    "input": "<h2>test1</h2> <p>test2</p>",
    "output": "<h2>test1</h2><p>test2</p>",
    "ground_truth": "<h2>test1</h2><p>test2</p>",
    "is_correct": "True",
    "instruction": "Remove spaces in HTML source in between markups?\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: <p>blahblahblah</p>            <p>blahblahblah</p>\nOutput: <p>blahblahblah</p><p>blahblahblah</p>\nInput: <head> <title>A Simple HTML Example</title> </head>\nOutput: <head><title>A Simple HTML Example</title></head>\nInput: <h2>HTML is Easy To Learn</h2> <p>Welcome to the world of the </p>\nOutput: <h2>HTML is Easy To Learn</h2><p>Welcome to the world of the </p>"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/8.json",
    "input": "<h2>test1</h2> <p>test2</p> <p>test3</p> <p>test4</p>",
    "output": "<h2>test1</h2><p>test2</p><p>test3</p><p>test4</p>",
    "ground_truth": "<h2>test1</h2><p>test2</p><p>test3</p><p>test4</p>",
    "is_correct": "True",
    "instruction": "Remove spaces in HTML source in between markups?\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: <p>blahblahblah</p>            <p>blahblahblah</p>\nOutput: <p>blahblahblah</p><p>blahblahblah</p>\nInput: <head> <title>A Simple HTML Example</title> </head>\nOutput: <head><title>A Simple HTML Example</title></head>\nInput: <h2>HTML is Easy To Learn</h2> <p>Welcome to the world of the </p>\nOutput: <h2>HTML is Easy To Learn</h2><p>Welcome to the world of the </p>"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/9.json",
    "input": ".json",
    "output": "application/json",
    "ground_truth": "application/json",
    "is_correct": "True",
    "instruction": "Get MIME type from filename extension\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: .html\nOutput: text/html\nInput: .css\nOutput: text/css\nInput: .js\nOutput: application/javascript"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/9.json",
    "input": ".xml",
    "output": "application/xml",
    "ground_truth": "application/xml",
    "is_correct": "True",
    "instruction": "Get MIME type from filename extension\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: .html\nOutput: text/html\nInput: .css\nOutput: text/css\nInput: .js\nOutput: application/javascript"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/9.json",
    "input": ".jpg",
    "output": "image/jpeg",
    "ground_truth": "image/jpeg",
    "is_correct": "True",
    "instruction": "Get MIME type from filename extension\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: .html\nOutput: text/html\nInput: .css\nOutput: text/css\nInput: .js\nOutput: application/javascript"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/9.json",
    "input": ".jpeg",
    "output": "image/jpeg",
    "ground_truth": "image/jpeg",
    "is_correct": "True",
    "instruction": "Get MIME type from filename extension\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: .html\nOutput: text/html\nInput: .css\nOutput: text/css\nInput: .js\nOutput: application/javascript"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/9.json",
    "input": ".png",
    "output": "image/png",
    "ground_truth": "image/png",
    "is_correct": "True",
    "instruction": "Get MIME type from filename extension\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: .html\nOutput: text/html\nInput: .css\nOutput: text/css\nInput: .js\nOutput: application/javascript"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/9.json",
    "input": ".gif",
    "output": "image/gif",
    "ground_truth": "image/gif",
    "is_correct": "True",
    "instruction": "Get MIME type from filename extension\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: .html\nOutput: text/html\nInput: .css\nOutput: text/css\nInput: .js\nOutput: application/javascript"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/9.json",
    "input": ".svg",
    "output": "image/svg+xml",
    "ground_truth": "image/svg+xml",
    "is_correct": "True",
    "instruction": "Get MIME type from filename extension\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: .html\nOutput: text/html\nInput: .css\nOutput: text/css\nInput: .js\nOutput: application/javascript"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/9.json",
    "input": ".pdf",
    "output": "application/pdf",
    "ground_truth": "application/pdf",
    "is_correct": "True",
    "instruction": "Get MIME type from filename extension\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: .html\nOutput: text/html\nInput: .css\nOutput: text/css\nInput: .js\nOutput: application/javascript"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/9.json",
    "input": ".zip",
    "output": "application/zip",
    "ground_truth": "application/zip",
    "is_correct": "True",
    "instruction": "Get MIME type from filename extension\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: .html\nOutput: text/html\nInput: .css\nOutput: text/css\nInput: .js\nOutput: application/javascript"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/9.json",
    "input": ".rar",
    "output": "application/x-rar-compressed",
    "ground_truth": "application/vnd.rar",
    "is_correct": "False",
    "instruction": "Get MIME type from filename extension\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: .html\nOutput: text/html\nInput: .css\nOutput: text/css\nInput: .js\nOutput: application/javascript"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/9.json",
    "input": ".mp4",
    "output": "video/mp4",
    "ground_truth": "video/mp4",
    "is_correct": "True",
    "instruction": "Get MIME type from filename extension\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: .html\nOutput: text/html\nInput: .css\nOutput: text/css\nInput: .js\nOutput: application/javascript"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/9.json",
    "input": ".mp3",
    "output": "audio/mpeg",
    "ground_truth": "audio/mpeg",
    "is_correct": "True",
    "instruction": "Get MIME type from filename extension\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: .html\nOutput: text/html\nInput: .css\nOutput: text/css\nInput: .js\nOutput: application/javascript"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/9.json",
    "input": ".wav",
    "output": "audio/wav",
    "ground_truth": "audio/wav",
    "is_correct": "True",
    "instruction": "Get MIME type from filename extension\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: .html\nOutput: text/html\nInput: .css\nOutput: text/css\nInput: .js\nOutput: application/javascript"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/9.json",
    "input": ".ogg",
    "output": "audio/ogg",
    "ground_truth": "audio/ogg",
    "is_correct": "True",
    "instruction": "Get MIME type from filename extension\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: .html\nOutput: text/html\nInput: .css\nOutput: text/css\nInput: .js\nOutput: application/javascript"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/9.json",
    "input": ".csv",
    "output": "text/csv",
    "ground_truth": "text/csv",
    "is_correct": "True",
    "instruction": "Get MIME type from filename extension\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: .html\nOutput: text/html\nInput: .css\nOutput: text/css\nInput: .js\nOutput: application/javascript"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/9.json",
    "input": ".txt",
    "output": "text/plain",
    "ground_truth": "text/plain",
    "is_correct": "True",
    "instruction": "Get MIME type from filename extension\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: .html\nOutput: text/html\nInput: .css\nOutput: text/css\nInput: .js\nOutput: application/javascript"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/9.json",
    "input": ".doc",
    "output": "application/msword",
    "ground_truth": "application/msword",
    "is_correct": "True",
    "instruction": "Get MIME type from filename extension\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: .html\nOutput: text/html\nInput: .css\nOutput: text/css\nInput: .js\nOutput: application/javascript"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/9.json",
    "input": ".docx",
    "output": "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
    "ground_truth": "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
    "is_correct": "True",
    "instruction": "Get MIME type from filename extension\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: .html\nOutput: text/html\nInput: .css\nOutput: text/css\nInput: .js\nOutput: application/javascript"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/9.json",
    "input": ".xls",
    "output": "application/vnd.ms-excel",
    "ground_truth": "application/vnd.ms-excel",
    "is_correct": "True",
    "instruction": "Get MIME type from filename extension\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: .html\nOutput: text/html\nInput: .css\nOutput: text/css\nInput: .js\nOutput: application/javascript"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/9.json",
    "input": ".xlsx",
    "output": "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
    "ground_truth": "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
    "is_correct": "True",
    "instruction": "Get MIME type from filename extension\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: .html\nOutput: text/html\nInput: .css\nOutput: text/css\nInput: .js\nOutput: application/javascript"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/9.json",
    "input": ".ppt",
    "output": "application/vnd.ms-powerpoint",
    "ground_truth": "application/vnd.ms-powerpoint",
    "is_correct": "True",
    "instruction": "Get MIME type from filename extension\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: .html\nOutput: text/html\nInput: .css\nOutput: text/css\nInput: .js\nOutput: application/javascript"
  },
  {
    "file_path": "/home/yangchenyu/megatran/data/TDE-v2/benchmark-stackoverflow/9.json",
    "input": ".pptx",
    "output": "application/vnd.openxmlformats-officedocument.presentationml.presentation",
    "ground_truth": "application/vnd.openxmlformats-officedocument.presentationml.presentation",
    "is_correct": "True",
    "instruction": "Get MIME type from filename extension\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: .html\nOutput: text/html\nInput: .css\nOutput: text/css\nInput: .js\nOutput: application/javascript"
  }
]