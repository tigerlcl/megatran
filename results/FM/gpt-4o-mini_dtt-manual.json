[
  {
    "file_path": "./data/DTT-test/Manual/chemical.json",
    "input": "K4[Fe(CN)6]",
    "output": "368",
    "ground_truth": "368",
    "is_correct": "True",
    "instruction": "Calculate the molar mass of the given chemical formula, and retain only the integer part.\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: H2O\nOutput: 18\nInput: C6H12O6\nOutput: 180\nInput: Al2(SO4)3\nOutput: 342"
  },
  {
    "file_path": "./data/DTT-test/Manual/chemical.json",
    "input": "(CH3)2CHOH",
    "output": "60",
    "ground_truth": "60",
    "is_correct": "True",
    "instruction": "Calculate the molar mass of the given chemical formula, and retain only the integer part.\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: H2O\nOutput: 18\nInput: C6H12O6\nOutput: 180\nInput: Al2(SO4)3\nOutput: 342"
  },
  {
    "file_path": "./data/DTT-test/Manual/chemical.json",
    "input": "Fe3[Fe(CN)6]2",
    "output": "393",
    "ground_truth": "591",
    "is_correct": "False",
    "instruction": "Calculate the molar mass of the given chemical formula, and retain only the integer part.\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: H2O\nOutput: 18\nInput: C6H12O6\nOutput: 180\nInput: Al2(SO4)3\nOutput: 342"
  },
  {
    "file_path": "./data/DTT-test/Manual/date.json",
    "input": "July 4th, 1776 at noon",
    "output": "1776-07-04T12:00:00+00:00",
    "ground_truth": "1776-07-04T12:00:00",
    "is_correct": "False",
    "instruction": "Convert the input date string to the ISO 8601 format.\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: Martes 21 de Octubre de 2014\nOutput: 2014-10-21T00:00:00+00:00\nInput: Monday, 02-Jan-06 15:04:05 MST\nOutput: 2006-01-02T22:04:05+00:00\nInput: 2012-08-03 18:31:59.257000000\nOutput: 2012-08-03T18:31:59.257000+00:00"
  },
  {
    "file_path": "./data/DTT-test/Manual/date.json",
    "input": "1 เดือนตุลาคม 2005, 1:00 AM",
    "output": "2005-10-01T01:00:00+00:00",
    "ground_truth": "2005-10-01T01:00:00+00:00",
    "is_correct": "True",
    "instruction": "Convert the input date string to the ISO 8601 format.\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: Martes 21 de Octubre de 2014\nOutput: 2014-10-21T00:00:00+00:00\nInput: Monday, 02-Jan-06 15:04:05 MST\nOutput: 2006-01-02T22:04:05+00:00\nInput: 2012-08-03 18:31:59.257000000\nOutput: 2012-08-03T18:31:59.257000+00:00"
  },
  {
    "file_path": "./data/DTT-test/Manual/date.json",
    "input": "2023-10-05 15:30 CST",
    "output": "2023-10-05T21:30:00+00:00",
    "ground_truth": "2023-10-05T21:30:00+00:00",
    "is_correct": "True",
    "instruction": "Convert the input date string to the ISO 8601 format.\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: Martes 21 de Octubre de 2014\nOutput: 2014-10-21T00:00:00+00:00\nInput: Monday, 02-Jan-06 15:04:05 MST\nOutput: 2006-01-02T22:04:05+00:00\nInput: 2012-08-03 18:31:59.257000000\nOutput: 2012-08-03T18:31:59.257000+00:00"
  },
  {
    "file_path": "./data/DTT-test/Manual/geo-1.json",
    "input": "48°51'29\"N, 2°17'40\"E",
    "output": "48.858, 2.294",
    "ground_truth": "48.858, 2.294",
    "is_correct": "True",
    "instruction": "Convert the input from DMS format to WGS84 format, keep 3 decimal places.\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 34°25'20\"N, 108°56'50\"E\nOutput: 34.422, 108.947\nInput: 25°30'20\"N, 80°0'10\"W\nOutput: 25.506, -80.003\nInput: 40°44'55\"N, 73°59'11\"W\nOutput: 40.749, -73.986"
  },
  {
    "file_path": "./data/DTT-test/Manual/geo-1.json",
    "input": "51°28'40\"N, 0°0'5\"W",
    "output": "51.477, -0.001",
    "ground_truth": "51.478, -0.001",
    "is_correct": "False",
    "instruction": "Convert the input from DMS format to WGS84 format, keep 3 decimal places.\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 34°25'20\"N, 108°56'50\"E\nOutput: 34.422, 108.947\nInput: 25°30'20\"N, 80°0'10\"W\nOutput: 25.506, -80.003\nInput: 40°44'55\"N, 73°59'11\"W\nOutput: 40.749, -73.986"
  },
  {
    "file_path": "./data/DTT-test/Manual/geo-2.json",
    "input": "10S X 360000 E 8400000",
    "output": "-63.000, 84.000",
    "ground_truth": "-14.469, -124.299",
    "is_correct": "False",
    "instruction": "Convert the input string to a latitude and longitude in WGS84 format, keep 3 decimal places.\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 19S U 452000 E 3575000\nOutput: -57.964, -69.811\nInput: 36N J 700000 E 4200000\nOutput: 37.926, 35.276\nInput: 33T Q 500000 E 1000000\nOutput: -81.061, 15.000"
  },
  {
    "file_path": "./data/DTT-test/Manual/geo-2.json",
    "input": "12N M 650000 E 2000000",
    "output": "-12.350, 20.000",
    "ground_truth": "18.084, -109.583",
    "is_correct": "False",
    "instruction": "Convert the input string to a latitude and longitude in WGS84 format, keep 3 decimal places.\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 19S U 452000 E 3575000\nOutput: -57.964, -69.811\nInput: 36N J 700000 E 4200000\nOutput: 37.926, 35.276\nInput: 33T Q 500000 E 1000000\nOutput: -81.061, 15.000"
  },
  {
    "file_path": "./data/DTT-test/Manual/geo-3.json",
    "input": "19SGB123456",
    "output": "39.175, -76.766",
    "ground_truth": "37.433, -66.6",
    "is_correct": "False",
    "instruction": "Convert the input to WGS84 format, keep 3 decimal places.\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 18SUJ123456\nOutput: 39.239, -77.175\nInput: 33TWN123456\nOutput: 47.364, 15.163\nInput: 11SJB123456\nOutput: 37.376, -121.378"
  },
  {
    "file_path": "./data/DTT-test/Manual/ip-address.json",
    "input": "127.0.0.1",
    "output": "::7f00:1",
    "ground_truth": "::7f00:1",
    "is_correct": "True",
    "instruction": "Convert the input IPV4 address to IPV6 address.\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 192.168.0.1\nOutput: ::c0a8:1\nInput: 10.0.0.1\nOutput: ::a00:1\nInput: 172.16.0.1\nOutput: ::ac10:1"
  },
  {
    "file_path": "./data/DTT-test/Manual/ip-address.json",
    "input": "192.0.2.1",
    "output": "::c000:201",
    "ground_truth": "::c000:201",
    "is_correct": "True",
    "instruction": "Convert the input IPV4 address to IPV6 address.\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 192.168.0.1\nOutput: ::c0a8:1\nInput: 10.0.0.1\nOutput: ::a00:1\nInput: 172.16.0.1\nOutput: ::ac10:1"
  },
  {
    "file_path": "./data/DTT-test/Manual/ip-address.json",
    "input": "203.0.113.5",
    "output": "::cb00:7105",
    "ground_truth": "::cb00:7105",
    "is_correct": "True",
    "instruction": "Convert the input IPV4 address to IPV6 address.\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 192.168.0.1\nOutput: ::c0a8:1\nInput: 10.0.0.1\nOutput: ::a00:1\nInput: 172.16.0.1\nOutput: ::ac10:1"
  },
  {
    "file_path": "./data/DTT-test/Manual/ip-address.json",
    "input": "192.168.1.1",
    "output": "::c0a8:101",
    "ground_truth": "::c0a8:101",
    "is_correct": "True",
    "instruction": "Convert the input IPV4 address to IPV6 address.\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 192.168.0.1\nOutput: ::c0a8:1\nInput: 10.0.0.1\nOutput: ::a00:1\nInput: 172.16.0.1\nOutput: ::ac10:1"
  },
  {
    "file_path": "./data/DTT-test/Manual/ip-address.json",
    "input": "198.51.100.9",
    "output": "::c633:6409",
    "ground_truth": "::c633:6409",
    "is_correct": "True",
    "instruction": "Convert the input IPV4 address to IPV6 address.\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: 192.168.0.1\nOutput: ::c0a8:1\nInput: 10.0.0.1\nOutput: ::a00:1\nInput: 172.16.0.1\nOutput: ::ac10:1"
  },
  {
    "file_path": "./data/DTT-test/Manual/romans.json",
    "input": "MCMXC",
    "output": "1990",
    "ground_truth": "1990",
    "is_correct": "True",
    "instruction": "Convert the input to WGS84 format, keep 3 decimal places.\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: MCMXC\nOutput: 1990\nInput: MMXIV\nOutput: 2014\nInput: CDXLIV\nOutput: 444"
  },
  {
    "file_path": "./data/DTT-test/Manual/romans.json",
    "input": "DCCCXLV",
    "output": "845",
    "ground_truth": "845",
    "is_correct": "True",
    "instruction": "Convert the input to WGS84 format, keep 3 decimal places.\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: MCMXC\nOutput: 1990\nInput: MMXIV\nOutput: 2014\nInput: CDXLIV\nOutput: 444"
  },
  {
    "file_path": "./data/DTT-test/Manual/romans.json",
    "input": "MMMCMXCIX",
    "output": "1999",
    "ground_truth": "3999",
    "is_correct": "False",
    "instruction": "Convert the input to WGS84 format, keep 3 decimal places.\nOnly output the transformed result without any explanation.\n",
    "examples": "Examples:\nInput: MCMXC\nOutput: 1990\nInput: MMXIV\nOutput: 2014\nInput: CDXLIV\nOutput: 444"
  }
]